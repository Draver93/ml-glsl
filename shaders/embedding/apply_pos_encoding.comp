#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430) restrict buffer EmbeddingsBuffer {
    float embeddings[];
};

layout(std430) readonly buffer PositionalEncodingBuffer {
    float positional_encoding[];
};

layout(std430) readonly buffer PaddingMask { int padding_mask[]; };
uniform bool has_padding_mask = false;

uniform int seq_len;
uniform int model_dim;

void main() {
    uint seq_pos = gl_GlobalInvocationID.x;  // sequence position (row index)
    uint model_dim_idx = gl_GlobalInvocationID.y;  // model dimension (column index)
    
    // Bounds check
    if (seq_pos >= seq_len || model_dim_idx >= model_dim) return;
    if (has_padding_mask && padding_mask[seq_pos] == 0) return;

    uint idx = model_dim_idx * seq_len + seq_pos;
    // Add positional encoding to embedding
    embeddings[idx] += positional_encoding[idx];
}