#version 430

layout(local_size_x = 16, local_size_y = 16) in;

// Embeddings: [seq_len, model_dim]
layout(std430) buffer EmbeddingsBuffer { float embeddings[]; };
layout(std430) readonly buffer PositionalEncodingBuffer { float positional_encoding[]; }; // Positional encoding: [seq_len, model_dim]

uniform int seq_len;
uniform int model_dim;
uniform int first_token_idx;

void main() {
    uint seq_pos = gl_GlobalInvocationID.x;  // sequence position (row index)
    uint model_dim_idx = gl_GlobalInvocationID.y;  // model dimension (column index)
    
    // Bounds check
    if (seq_pos >= seq_len || model_dim_idx >= model_dim) return;

    // Only remove from real tokens
    if (seq_pos < first_token_idx) return;

    uint real_pos = seq_pos - first_token_idx;
    uint idx = model_dim_idx * seq_len + seq_pos;
    uint pos_enc_idx = model_dim_idx * seq_len + real_pos;
    embeddings[idx] -= positional_encoding[pos_enc_idx];
}