#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430, binding = 0) restrict buffer EmbeddingsBuffer {
    float embeddings[];
};

layout(std430, binding = 1) readonly buffer PositionalEncodingBuffer {
    float positional_encoding[];
};

uniform int seq_len;
uniform int model_dim;

void main() {
    uint seq_pos = gl_GlobalInvocationID.x;  // sequence position (row index)
    uint model_dim_idx = gl_GlobalInvocationID.y;  // model dimension (column index)
    
    // Bounds check
    if (seq_pos >= seq_len || model_dim_idx >= model_dim) {
        return;
    }
    
    // Column-major indexing: [model_dimension * seq_len + sequence_position]
    // This accesses the embedding value at [seq_pos, model_dim_idx]
    uint embedding_col_major_idx = model_dim_idx * seq_len + seq_pos;
    uint pos_encoding_col_major_idx = model_dim_idx * seq_len + seq_pos;
    
    // Remove positional encoding from embedding
    embeddings[embedding_col_major_idx] -= positional_encoding[pos_encoding_col_major_idx];
}