#version 430

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

// Embedding matrix: [vocab_size, model_dim]
layout(std430) readonly buffer EmbeddingsMat { float embeddings[]; };
// Indices: [seq_len]
layout(std430) readonly buffer Indices { int token_indices[]; };
// Output: [model_dim, seq_len]
layout(std430) buffer OutputMat { float output_buffer[]; };

uniform int vocab_size;
uniform int model_dim;
uniform int seq_len;


void main() { //VALID
    uint dim = gl_GlobalInvocationID.x;      // model_dim (column)
    uint out_idx = gl_GlobalInvocationID.y;  // seq_len (row)
    if (dim >= model_dim || out_idx >= seq_len) return; // return if over the dim

    int token_idx = token_indices[out_idx];
    if (token_idx < 0 || token_idx >= vocab_size)  return;

    output_buffer[dim * seq_len + out_idx] = embeddings[token_idx * model_dim + dim]; 
} 