#version 430
layout(local_size_x = 32) in;

layout(std430) readonly buffer Input       { float input[]; };
layout(std430) readonly buffer GradOutput  { float grad_output[]; };
layout(std430) writeonly buffer GradWeight { float grad_weight[]; };

uniform int seq_len;
uniform int input_dim;
uniform int head_dim;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= input_dim * head_dim) return;

    uint input_idx = idx / head_dim;
    uint head_idx  = idx % head_dim;

    float acc = 0.0;
    for (int seq_idx = 0; seq_idx < seq_len; ++seq_idx) {
        float inp = input[seq_idx * input_dim + input_idx];
        float go  = grad_output[seq_idx * head_dim + head_idx];
        acc += inp * go;
    }

    grad_weight[input_idx * head_dim + head_idx] = acc;
}